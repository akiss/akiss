// Nonce protocol as decribed in Gong's paper (1993)
// Protecting Poorly Chosen Secrets from Guessing Attacks (page 11)

// A -> S: A, B
// S -> A: A, B, ns
// A -> B: {A, B, na1, na2, ca, {ns}Ka}Ks, ns, ra
// B -> S: {A, B, na1, na2, ca, {ns}Ka}Ks,  {B, A, nb1, nb2, cb, {ns}Kb}Ks
// S -> B: {na1, k + na2}Ka,  {nb1, k + nb2}Kb
// B -> A: {na1, k + na2}Ka, {f1(ra),rb}k
// A -> B: {f2(rb)}k


#set xor;

symbols  senc/2, sdec/2, pair/2, fst/1, snd/1, f1/1, f2/1,aenc/2, adec/2, pk/1, A/0, B/0, ns/0;
private pwA, pwB, na1,na2, nb1,nb2, ra,rb, pfresh, sks,ca,cb, k;
channels CA, CB, CS;
var X, Y, Z, X1, X2, X3, Xk, Xrb, Y1, Y2, Y3, Y4, Yk, Yra, Z1, Z2, Za, Zb, Zna1, Zna2, Znb1, Znb2;

rewrite adec(aenc(X,pk(Y)),Y) -> X;
rewrite senc(sdec(X,Y),Y) -> X;
rewrite sdec(senc(X,Y),Y) -> X;
rewrite fst(pair(X,Y)) -> X;
rewrite snd(pair(X,Y)) -> Y;
rewrite pair(fst(X),snd(X)) ->X;

// Role A slightly simplified

A1 =  in(CA,X1).out(CA,pair(aenc(pair(A,pair(B,pair(na1,pair(na2,pair(ca,senc(X1,pwA)))))),pk(sks)),ra)).0;

A2 =  in(CA, X). let X2 = fst(X) in let X3 =snd(X) in [fst(sdec(X2,pwA)) = na1].
      let Xk = snd(sdec(X2,pwA)) + na2 in [fst(sdec(X3,Xk)) = f1(ra)]. let Xrb = snd(sdec(X3,Xk)) in
      out(CA,senc(f2(Xrb),Xk)).0;


// Role B slightly simplified

B1 = in(CB,Y1).out(CB,aenc(pair(B,pair(A,pair(nb1,pair(nb2,pair(cb,senc(Y1,pwB)))))),pk(sks))).0;

B2 = in(CB,Y). let Y2 = fst(Y) in let Y3 =snd(Y) in  [fst(sdec(Y2,pwB)) = nb1].
     let Yk = snd(sdec(Y2,pwB)) + nb2 in out(CB, senc(pair(f1(Y3),rb), Yk)).0;
      
// Role S slightly simplified
S = in(CS,Z). let Z1 = fst(Z) in let Z2 = snd(Z) in let Za = adec(Z1,sks) in let Zb = adec(Z2,sks) in [fst(Za) = A].[fst(snd(Za)) = B].
      [fst(Zb) = B]. [fst(snd(Zb)) = A]. [snd(snd(snd(snd(snd(Za))))) = senc(ns,pwA)]. [snd(snd(snd(snd(snd(Zb))))) = senc(ns,pwB)]. 
      let Zna1 = fst(snd(snd(Za))) in let Zna2 = fst(snd(snd(snd(Za)))) in
      let Znb1 = fst(snd(snd(Zb))) in let Znb2 = fst(snd(snd(snd(Zb)))) in
      out(CS, pair(senc(pair(Zna1,k+Zna2),pwA), senc(pair(Znb1,k+Znb2),pwB))).0;

P = (A1 :: A2) || (B1 :: B2) || S;

PwA = ((out(CS,pk(sks))::P) >> out(CS,pwA));

Pfresh = ((out(CS,pk(sks))::P) >> out(CS,pfresh));

includedct? PwA in Pfresh;
