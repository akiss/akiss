// This is a fix of the Needham-Schroeder public-key protocol introduced by Gavin Lowe
// in his paper `Breaking and Fixing the Needham-Schroeder Public-Key Protocol Using FDR.'
//
// Informal description of the protocol :
//
//      1. A -> B : {na,A}_pk(B)   (na fresh)
//      2. B -> A : {nb,na,B}_pk(A)  (nb fresh)
//      3. A -> B : {nb}_{pk(B)}
//
// The protocol  respects real-or-random secrecy of nb if asymmetric encryption is used.
//
symbols adec/2, aenc/3, pk/1, fst/1, snd/1, pair/2, a/0, b/0, d/0, kd/0, ok/0;

private na, nb, ka, kb, fk,r1b,r2b,r1d,r2d,r3;

channels C, Cab, Cad, Cb;

var y1, y2, z, xx, yy, zz, y0, k, r1, r2;

rewrite adec(aenc(xx, pk(yy), zz), yy) -> xx;
rewrite fst(pair(xx, yy)) -> xx;
rewrite snd(pair(xx, yy)) -> yy;


AtoB = out(Cab, aenc(pair(na, a), pk(kb), r1b)).in(Cab, y1).[snd(snd(adec(y1,ka)))=b].out(Cab, aenc(fst(snd(adec(y1,ka))), pk(kb), r2b)).0;
AtoD = out(Cad, aenc(pair(na, a), pk(kd), r1d)).in(Cad, y2).[snd(snd(adec(y2,ka)))=d].out(Cad, aenc(fst(snd(adec(y2,ka))), pk(kd), r2d)).0;

BtoA = in(Cb, y0).[snd(adec(y0, kb)) = a].out(Cb, aenc(pair(fst(adec(y0, kb)), pair(nb, b)), pk(ka), r3)).0;

Setup = out(C,pk(ka)).out(C,pk(kb)).0;

P =  AtoD || AtoB || BtoA;

TeardownReal = out(C,nb).0;

TeardownFake = out(C,fk).0;

PP = Setup :: P >> TeardownReal;

QQ = Setup :: P >> TeardownFake;

equivalentct? PP and QQ;
